angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule', ['ui.router', 'TaskModule.Service', 'TaskModule.Directives', 'TaskModule.Controllers'])
    .value('TaskModuleConfig',{
        layout:'app/modules/tasks/partials/layout.html',
        taskCtrl:'TaskCtrl as tasks'
    })

    .config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {

        var task = {
            url: '/task',
            templateUrl: 'app/modules/tasks/partials/layout.html',
            controller: 'TaskCtrl as task'
        };

        $urlRouterProvider.otherwise('/');

        $stateProvider
            .state('task', task);

    }]);
angular.module('TaskModule.Controllers', [])
    .controller('TaskCtrl', ['$scope', 'TaskService', function($scope, taskService){

        this.taskList = taskService.getTaskList().tasks;
        console.log(this.taskList);
    }]);
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module("TaskModule",["ui.router","TaskModule.Service","TaskModule.Directives","TaskModule.Controllers"]).value("TaskModuleConfig",{layout:"app/modules/tasks/partials/layout.html",taskCtrl:"TaskCtrl as tasks"}).config(["$stateProvider","$urlRouterProvider",function(a,t){var l={url:"/task",templateUrl:"app/modules/tasks/partials/layout.html",controller:"TaskCtrl as task"};t.otherwise("/"),a.state("task",l)}]);
angular.module("TaskModule.Controllers",[]).controller("TaskCtrl",["$scope","TaskService",function(s,t){this.taskList=t.getTaskList().tasks,console.log(this.taskList)}]);
angular.module("TaskModule",["ui.router","TaskModule.Service","TaskModule.Directives","TaskModule.Controllers"]).value("TaskModuleConfig",{layout:"app/modules/tasks/partials/layout.html",taskCtrl:"TaskCtrl as tasks"}).config(["$stateProvider","$urlRouterProvider",function(a,t){var l={url:"/task",templateUrl:"app/modules/tasks/partials/layout.html",controller:"TaskCtrl as task"};t.otherwise("/"),a.state("task",l)}]);
angular.module("TaskModule.Directives",["TaskModule.Directives.TaskList","TaskModule.Directives.TaskItem"]),angular.module("TaskModule.Directives.TaskList",[]).directive("tomTasksList",[function(){function e(){}return{link:e,templateUrl:"app/modules/tasks/partials/task-list.html",replace:!0}}]),angular.module("TaskModule.Directives.TaskItem",[]).directive("tomTaskItem",["TaskService",function(e){function t(e,t,s){t.click(function(){i(s.id)})}function i(t){console.log(e.getTaskQuestion(t))}return{link:t}}]);
angular.module("TaskModule.Service",[]).service("TaskService",function(){function e(){return{tasks:[{id:"guid-0",name:"Read brief, confirm you've read it",is_completed:!1},{id:"guid-1",name:"Confirm shipping address for event materials",is_completed:!1},{id:"guid-2",name:"Scout location",is_completed:!1},{id:"guid-3",name:"Pre-promote event",is_completed:!1},{id:"guid-4",name:'Confirm "all systems go" for event execution',is_completed:!1}]}}function i(e){return"get question for"+e}return{getTaskList:e,getTaskQuestion:i}});
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});
angular.module('TaskModule.Directives', ['TaskModule.Directives.TaskList', 'TaskModule.Directives.TaskItem'])

/*
@Name:Task List
@Type:UI
*/
angular.module('TaskModule.Directives.TaskList', [])
    .directive('tomTasksList', [function(){
        
        return {
            link:link,
            templateUrl: 'app/modules/tasks/partials/task-list.html',
            replace:true
        }
        
        function link(){
        }
}]);


/*
@Name:Task Item
@Type:UI
*/

angular.module('TaskModule.Directives.TaskItem', [])
    .directive('tomTaskItem', ['TaskService', function(taskService){
        
        return {
            link:link,
        }
        
        function link($scope, element, attrs){
            element.click(function(){
                onGetTaskQuestion(attrs.id);
            });
        }

        function onGetTaskQuestion(id){
            console.log(taskService.getTaskQuestion(id));
        }
}]);
angular.module('TaskModule.Service', [])

    .service('TaskService', function(){
        
        return {
            getTaskList:getTaskList,
            getTaskQuestion: getTaskQuestion
        }
        
        function getTaskList(){
            return {
                tasks:[
                        {
                            id:'guid-0',
                            name:'Read brief, confirm you\'ve read it',
                            is_completed:false

                        },
                        {
                            id:'guid-1',
                            name:'Confirm shipping address for event materials',
                            is_completed:false
                        },
                        {
                            id:'guid-2',
                            name:'Scout location',
                            is_completed:false
                        },
                        {
                            id:'guid-3',
                            name:'Pre-promote event',
                            is_completed:false
                        },
                        {
                            id:'guid-4',
                            name:'Confirm "all systems go" for event execution',
                            is_completed:false
                        }                     
                    ]
            }
        };

        function getTaskQuestion(id){
            return('get question for' + id);
            
        }
    
    
});